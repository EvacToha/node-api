// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodeApl.API.Infrastructure.Data;

#nullable disable

namespace NodeApl.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NodeApl.API.Domain.Entities.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Шаблоны",
                            Type = "Шаблон"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Шаблон 1",
                            ParentId = 1,
                            Type = "Шаблон"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Шаблон 2",
                            ParentId = 1,
                            Type = "Шаблон"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Шаблон 3",
                            ParentId = 1,
                            Type = "Шаблон"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Изделия",
                            Type = "Изделие"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Изделие 1",
                            ParentId = 2,
                            Type = "Изделие"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Изделие 2",
                            ParentId = 2,
                            Type = "Изделие"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Документы",
                            Type = "Документ"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Документ 1",
                            ParentId = 3,
                            Type = "Документ"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Документ 2",
                            ParentId = 3,
                            Type = "Документ"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Документ 3",
                            ParentId = 3,
                            Type = "Документ"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Документ 4",
                            ParentId = 3,
                            Type = "Документ"
                        });
                });

            modelBuilder.Entity("NodeApl.API.Domain.Entities.Node", b =>
                {
                    b.HasOne("NodeApl.API.Domain.Entities.Node", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("NodeApl.API.Domain.Entities.Node", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
